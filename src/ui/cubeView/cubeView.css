.default-layout:has(.cube-view-root) {
    margin: unset;
}

.update-timestamp {
    margin-right: var(--spacing-200);
}
.active-card-title {
    margin: unset;
}
.cube-view-root {
    .header {
        margin: 0 var(--spacing-300);
        display: flex;
        flex-direction: column;
        gap: var(--spacing-200);
    }

    .card-list-root {
        margin-top: var(--spacing-300);
    }

    .list-control {
        margin: 0 var(--spacing-300) var(--spacing-300);
        display: flex;
        flex-direction: column;
        gap: var(--spacing-200);
    }

    .card-view {
        margin: unset;
    }
    @media screen {
        .print-page {
            display: none;
        }
    }
    @media print {
        .masthead,
        .list-control,
        .transform-button,
        .header,
        .result-container {
            display: none !important;
        }
        .card-view {
            width: 63.5mm;
        }
        .print-page {
            display: flex;
            justify-content: center;
            flex-direction: row;
            flex-wrap: wrap;
            padding-top: .25in;
            padding-bottom: .25in;
        }
    }

    h2 {
        margin-bottom: 0;
    }

    .cube-filter {
        flex-wrap: wrap;
    }

    @media (min-width: 769px) {
        .cube-filter input {
            width: 30rem;
        }
    }

    @media (max-width: 768px) {
        .cube-filter input {
            width: 17rem;
        }
    }

    .description-not-found {
        margin: var(--spacing-300);
    }
}

.cube-db-status {
    width: 500px;
}

.cube-overview {
    margin-top: var(--spacing-200);
    display: flex;
    justify-content: center;
    align-items: start;
    gap: var(--spacing-200);

    .cube-description {
        margin: 0;
        padding: var(--spacing-300);
        background-color: var(--darker-color);
        min-width: 63vw;
    }

    img.cover-image {
        max-width: 33vw;
        border: var(--darker-color) inset 2px;
    }
}

@media (max-width: 768px) {
    .cube-overview {
        flex-wrap: wrap;

        img.cover-image {
            max-width: 95vw;
        }
    }
    .cube-description {
        width: 100%;
    }
}

.card-row > * {
    width: 33%;
    aspect-ratio: var(--card-aspect-ratio);
}


.card-image-container span {
    font-size: 5em;
}

.active-card-root {
    &.row {
        gap: var(--spacing-400);
    }
    img {
        width: 300px;
        aspect-ratio: var(--card-aspect-ratio);
    }
}
.classic-card-list-root {
    margin: var(--spacing-300);
}

.card-column-root {
    flex: 1;

    display: flex;
    flex-direction: column;
    gap: var(--spacing-200);

    .column-header {
        font-weight: bolder;
        text-align: center;
    }

    .column-subheader {
        font-weight: bold;
        color: var(--on-data);
        padding: var(--spacing-100);
        padding-top: var(--spacing-200);
        border-top-right-radius: var(--border-radius);
        border-top-left-radius: var(--border-radius);
    }

    .column-subgroup {
        &:not(:last-of-type) {
            border-bottom: 1px solid var(--darker-color);
        }
        &:last-of-type {
            border-bottom-right-radius: var(--border-radius);
            border-bottom-left-radius: var(--border-radius);
        }
    }

    .column-cell {
        font-size: .9em;
        color: var(--on-data);
        padding: var(--spacing-100);
        background-color: var(--bkgd-color);

        &:last-of-type {
            border-bottom-right-radius: var(--border-radius);
            border-bottom-left-radius: var(--border-radius);
        }
        .card-link {

            display: inline-block;
            width: 100%;
            text-decoration: none;
            border-radius: var(--border-radius);

            &.active,
            &:hover {
                color: unset;
            }
        }
        &:hover {
            background-color: color-mix(in oklch, var(--bkgd-color), #000 10%);
        }

        &.w {
            --bkgd-color: var(--data-w);
        }
        &.u {
            --bkgd-color: var(--data-u);
        }
        &.b {
            --bkgd-color: var(--data-b);
        }
        &.r {
            --bkgd-color: var(--data-r);
        }
        &.g {
            --bkgd-color: var(--data-g);
        }
        &.multi {
            --bkgd-color: var(--data-m);
        }
        &.colorless {
            --bkgd-color: var(--data-c);
        }
    }


}